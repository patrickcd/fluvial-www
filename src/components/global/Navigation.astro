---
// Icons
import ChevronRight from "@/components/fundations/icons/ChevronRight.astro";
// Assets
import Logo from "@/components/assets/Logo.astro";
// Fundations
import Link from "@/components/fundations/elements/Link.astro";
import Button from "@/components/fundations/elements/Button.astro";
// Dropdowns link
const dropdowns = [
  {
    label: "Overview",
    id: "menu-overview",
    items: [
      { label: "All pages", href: "/system/overview", shortcut: "A" },
      { label: "Colors", href: "/system/colors", shortcut: "C" },
      { label: "Links", href: "/system/links", shortcut: "L" },
      { label: "Buttons", href: "/system/buttons", shortcut: "B" },
      { label: "Typography", href: "/system/typography", shortcut: "T" },
    ],
    flyout: {
      label: "Resources",
      items: [
        {
          label: "License",
          href: "https://lexingtonthemes.com/legal/license/",
          shortcut: "L",
        },
        {
          label: "Documentation",
          href: "https://lexingtonthemes.com/documentation/",
          shortcut: "D",
        },
      ],
    },
  },
  {
    label: "Company",
    id: "menu-company",
    items: [
      { label: "About", href: "/about", shortcut: "A" },
      { label: "Pricing", href: "/pricing", shortcut: "P" },
      { label: "Customers", href: "/customers/home", shortcut: "C" },
      { label: "Changelog", href: "/changelog/home", shortcut: "C" },
      { label: "Integrations", href: "/integrations/home", shortcut: "I" },
      { label: "Help Center", href: "/helpcenter/home", shortcut: "H" },
    ],
  },
];
---
<header class="fixed z-50 w-full top-4 md:px-12">
  <div class="px-8 md:px-0 mx-auto 2xl:px-12 max-w-screen 2xl:max-w-[1440px]">
    <div
      class="flex flex-col w-full bg-white md:items-center md:justify-between md:flex-row outline outline-base-200"
    >
      <div class="flex flex-row items-center justify-between w-full md:w-auto">
        <a href="/" class="font-mono text-base font-bold uppercase bg-black">
          <Logo class="h-full p-2 text-white size-11" />
          <span class="sr-only">Homepage</span>
        </a>
        
        <button
          class="relative z-50 text-white bg-black md:hidden focus:outline-none focus:shadow-outline size-11"
          aria-label="Toggle navigation menu"
          id="navToggle"
        >
          <span class="sr-only">Toggle navigation</span>
          <svg
            class="mx-auto size-7"
            stroke="currentColor"
            fill="none"
            viewBox="0 0 24 24"
          >
            <path id="menuIcon" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"
            ></path>
            <path
              id="closeIcon"
              class="hidden"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <nav
        id="navMenu"
        class="fixed inset-0 z-40 flex-col hidden w-full p-8 mt-12 bg-white md:mt-0 md:p-0 md:border-l md:border-base-200 md:items-center md:justify-end gap-2 md:gap-0 sm:relative md:flex md:flex-row md:bg-transparent md:static"
        role="menubar"
        aria-label="Main navigation"
      >
        {
          dropdowns.map((dropdown) => (
            <div role="none" class="relative">
              <button
                role="menuitem"
                aria-haspopup="true"
                aria-expanded="false"
                aria-controls={dropdown.id}
                data-menu-button={dropdown.id}
                class="px-4 py-2 text-sm font-medium focus:outline-none"
              >
                {dropdown.label}
              </button>
              <ul
                id={dropdown.id}
                role="menu"
                class="dropdown-menu absolute mt-2 z-50 top-full w-50 md:w-78.5 bg-white outline outline-base-200 opacity-0 invisible transition-all duration-300"
              >
                {dropdown.items.map((item) => (
                  <li role="none">
                    <a
                      role="menuitem"
                      href={item.href}
                      aria-label={`Go to ${item.label} page`}
                      class="flex items-center gap-2 px-4 py-2 text-sm hover:text-base-600"
                    >
                      <span class="p-2 text-sm size-6">{item.shortcut}</span>
                      {item.label}
                    </a>
                  </li>
                ))}
                {dropdown.flyout && (
                  <li role="none" class="relative">
                    <button
                      role="menuitem"
                      aria-haspopup="true"
                      aria-expanded="false"
                      aria-controls="second-flyout-submenu"
                      class="flex w-full justify-between px-4 py-2 text-sm hover:text-base-600"
                    >
                      {dropdown.flyout.label}
                      <ChevronRight class="size-4" />
                    </button>
                    <ul
                      id="second-flyout-submenu"
                      role="menu"
                      class="flyout-menu absolute left-full top-0 z-50 w-56 bg-white opacity-0 invisible transition-all duration-300"
                    >
                      {dropdown.flyout.items.map((item) => (
                        <li role="none">
                          <a
                            role="menuitem"
                            href={item.href}
                            aria-label={`View ${item.label}`}
                            class="flex items-center gap-2 px-4 py-2 text-sm hover:text-base-600"
                          >
                            <span class="p-2 text-sm size-6">
                              {item.shortcut}
                            </span>
                            {item.label}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </li>
                )}
              </ul>
            </div>
          ))
        }
        <Link role="menuitem" href="/blog/home" class="px-4 py-2 text-sm"
          >News</Link
        >
        <Link role="menuitem" href="/forms/sign-in" class="px-4 py-2 text-sm"
          >Log in</Link
        >
        <Link
          role="menuitem"
          href="https://buy.polar.sh/â€¦"
          class="px-4 py-2 text-sm">Buy Alfred</Link
        >
      </nav>
    </div>
  </div>
  <script type="module">
    document.addEventListener("DOMContentLoaded", function () {
      const toggle = document.getElementById("navToggle");
      const nav = document.getElementById("navMenu");
      const menuIcon = document.getElementById("menuIcon");
      const closeIcon = document.getElementById("closeIcon");
      // Mobile menu toggle
      toggle.addEventListener("click", () => {
        const isOpen = nav.classList.contains("flex");
        nav.classList.toggle("hidden", isOpen);
        nav.classList.toggle("flex", !isOpen);
        menuIcon.classList.toggle("hidden", !isOpen);
        closeIcon.classList.toggle("hidden", isOpen);
      });
      // Close nav on Escape key
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape" && nav.classList.contains("flex")) {
          nav.classList.add("hidden");
          nav.classList.remove("flex");
          menuIcon.classList.remove("hidden");
          closeIcon.classList.add("hidden");
        }
      });
      // Keyboard navigation inside menus
      const menus = document.querySelectorAll('nav [role="menu"]');
      menus.forEach((menu) => {
        const items = menu.querySelectorAll('[role="menuitem"]');
        menu.addEventListener("keydown", (e) => {
          const currentIndex = Array.from(items).indexOf(
            document.activeElement
          );
          if (e.key === "ArrowDown") {
            e.preventDefault();
            const nextIndex = (currentIndex + 1) % items.length;
            items[nextIndex].focus();
          }
          if (e.key === "ArrowUp") {
            e.preventDefault();
            const prevIndex = (currentIndex - 1 + items.length) % items.length;
            items[prevIndex].focus();
          }
        });
      });
      // -----------------------------------------
      // Dropdowns (first-level) open/close on click
      // -----------------------------------------
      const dropdownToggles = document.querySelectorAll(".dropdown-toggle");
      dropdownToggles.forEach((toggle) => {
        const menuId = toggle.dataset.menuButton;
        const dropdown = document.getElementById(menuId);
        toggle.addEventListener("click", (e) => {
          e.preventDefault();
          e.stopPropagation();
          const isOpen = dropdown.classList.contains("opacity-100");
          // Close all dropdowns
          document.querySelectorAll(".dropdown-menu").forEach((menu) => {
            menu.classList.add("opacity-0", "invisible");
            menu.classList.remove("opacity-100", "visible");
          });
          // Close all flyouts too
          document.querySelectorAll(".flyout-menu").forEach((menu) => {
            menu.classList.add("opacity-0", "invisible");
            menu.classList.remove("opacity-100", "visible");
          });
          // Toggle this dropdown
          if (!isOpen) {
            dropdown.classList.remove("opacity-0", "invisible");
            dropdown.classList.add("opacity-100", "visible");
          }
        });
      });
      // -----------------------------------------
      // Flyouts (second-level) open/close on click
      // -----------------------------------------
      const flyoutToggles = document.querySelectorAll(
        '[aria-controls="second-flyout-submenu"]'
      );
      flyoutToggles.forEach((toggle) => {
        const flyout = document.getElementById("second-flyout-submenu");
        toggle.addEventListener("click", (e) => {
          e.preventDefault();
          e.stopPropagation();
          const isOpen = flyout.classList.contains("opacity-100");
          // Close all flyouts
          document.querySelectorAll(".flyout-menu").forEach((menu) => {
            menu.classList.add("opacity-0", "invisible");
            menu.classList.remove("opacity-100", "visible");
          });
          // Toggle this flyout
          if (!isOpen) {
            flyout.classList.remove("opacity-0", "invisible");
            flyout.classList.add("opacity-100", "visible");
          }
        });
      });
      // Close everything on outside click
      document.addEventListener("click", (e) => {
        if (
          !e.target.closest(".dropdown-toggle") &&
          !e.target.closest(".dropdown-menu") &&
          !e.target.closest('[aria-controls="second-flyout-submenu"]') &&
          !e.target.closest("#second-flyout-submenu")
        ) {
          document
            .querySelectorAll(".dropdown-menu, .flyout-menu")
            .forEach((menu) => {
              menu.classList.add("opacity-0", "invisible");
              menu.classList.remove("opacity-100", "visible");
            });
        }
      });
    });
  </script>
</header>
