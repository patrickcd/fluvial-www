---
// Assets
import Kicker from "@/components/assets/Kicker.astro";
import { Image } from "astro:assets";
import teamDashboard from "@/images/assets/teamDashboard.jpg";
// Fundations
import Text from "@/components/fundations/elements/Text.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
const features = [
  {
    features: {
      title: "Invite your chaos crew",
      subtitle:
        "Wrangle your team into one place and pretend it’s organized. Real-time updates keep everyone from screaming.",
    },
  },
  {
    features: {
      title: "Multiple Scoring Perspectives",
      subtitle:
        "Different stakeholders evaluate the same questionnaire from their own perspective—engineering scores for capability, finance for cost, legal for compliance risk.",
    },
  },
  {
    features: {
      title: "Multi-Party Collaboration",
      subtitle:
        "Fine-grained permissions let vendors respond, analysts review, subject matter experts validate, and executives approve—each role sees appropriate views.",
    },
  },
];
---

<section>
  <Wrapper variant="standard" class="py-8">
    <div class="p-8 bg-blue-50 lg:p-12">
      <div class="grid grid-cols-1 gap-8 md:grid-cols-4 md:items-end">
        <div>
          <Kicker class="text-white bg-blue-800">M</Kicker>
          <Text
            tag="h2"
            variant="displaySM"
            class="mt-8 font-medium tracking-tight text-blue-800 text-balance"
          >
            Advanced Questionnaire Engine
          </Text>
        </div>
        <Text
          tag="p"
          variant="textLG"
          class="mt-4 text-base-600 lg:text-balance md:col-span-2 md:col-start-3"
        >
          Professional assessment capabilities proven at 28 of the 30 largest banks. Hierarchical organization, weighted scoring, multi-party workflows, and complete audit trails for complex evaluations.
        </Text>
      </div>
      <div class="mt-12">
        <Image
          width={1800}
          height={800}
          src={teamDashboard}
          alt="#_"
          loading="eager"
          decoding="async"
          class="w-full"
        />
      </div>
      <div class="mt-12 grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
        {
          features.map(({ features }) => (
            <div>
              <Text tag="h3" variant="textXL" class="font-medium text-blue-800">
                {features.title}
              </Text>
              <Text tag="p" variant="textLG" class="mt-2  text-base-600">
                {features.subtitle}
              </Text>
            </div>
          ))
        }
      </div>
    </div>
  </Wrapper>
</section>
